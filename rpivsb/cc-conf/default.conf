# This is generated file. Do not edit.

Ignore  = -dkm -rtp
Ignore += --static-crt -nodefaultlibs -no-pie -print-multiarch -rdynamic --print-multiarch -print-search-dirs --print-search-dirs

require WIND_CC_SYSROOT

[-rtp | !-dkm] RTP = true
[-dkm]         DKM = true
[RTP & DKM] error cannot specify both -rtp and -dkm

[-shared | -Bshareable]                           OptionShared = true
[-static | -Bstatic|-non_shared]                  OptionStatic = true
[-Bdynamic | -call_shared]                        OptionDynamic = true
[-r]                                              OptionPartial = true
[OptionDynamic | OptionShared | OptionPartial]    OptionNonStatic = true

[OptionPartial]                         Partial = true
[OptionShared & !OptionPartial]         Shared = true
[OptionStatic & !OptionNonStatic]       Static = true
[--static-crt]                          Static = true
[!(Shared | Static | Partial) & RTP]    Dynamic = true
[!(Shared | Static | Partial) & DKM]    Partial = true
[DKM & (Static | Shared | Dynamic)]     error DKM only support partial link 

[Win64]   BINDIR = $(WIND_HOME)/compilers/llvm-9.0.1.1/WIN64/bin
[Linux64] BINDIR = $(WIND_HOME)/compilers/llvm-9.0.1.1/LINUX64/bin
PROG_cc = $(BINDIR)/clang$(EXE)
PROG_c++ = $(BINDIR)/clang++$(EXE)
PROG_ld = $(BINDIR)/ldarm64$(EXE) -m aarch64elf -EL
PROG_ld_DKM = $(BINDIR)/ldarm64$(EXE) -m aarch64elf -EL
PROG_ar = $(BINDIR)/ararm64$(EXE)
PROG_size = $(BINDIR)/sizearm64$(EXE)
PROG_nm = $(BINDIR)/nmarm64$(EXE)
PROG_objcopy = $(BINDIR)/objcopyarm64$(EXE)
PROG_ranlib = $(BINDIR)/ranlibarm64$(EXE)
PROG_readelf = $(BINDIR)/readelfarm64$(EXE)
PROG_strip = $(BINDIR)/striparm64$(EXE)
PROG_objdump = $(BINDIR)/objdumparm64$(EXE)

CC = $(PROG_cc)
LD = $(PROG_ld)

[Verbose]           OPT_CC_V = -v
[Verbose & NoFiles] OPT_CC_V += -Wno-unused-command-line-argument

[-print-search-dirs | --print-search-dirs] print programs: = $(WIND_BASE)/host/$(WIND_VX7_HOST_TYPE)/bin
[-print-search-dirs | --print-search-dirs] print libraries: = $(WIND_CC_SYSROOT)/usr/lib/common$(:)$(WIND_CC_SYSROOT)/usr/3pp/develop/lib$(:)$(WIND_CC_SYSROOT)/usr/3pp/develop/usr/lib

[RTP] Compile = $(CC) --target=arm64 -ffixed-x18 -D_VX_CPU=_VX_ARMARCH8A $(MC_MODEL) -fno-strict-aliasing -fno-builtin -nostdlibinc -nostdinc++ -D__ELF__ -D__vxworks -D__VXWORKS__  -D__RTP__  -D_VX_TOOL_FAMILY=llvm -D_VX_TOOL=llvm -D_USE_INIT_ARRAY -fasm  -I. -I$(WIND_CC_SYSROOT)/usr/h/published/UTILS_UNIX -D_VSB_CONFIG_FILE=\"$(WIND_CC_SYSROOT)/h/config/vsbConfig.h\"  -I$(WIND_CC_SYSROOT)/share/h -isystem$(WIND_CC_SYSROOT)/usr/h -isystem$(WIND_CC_SYSROOT)/usr/h/system -isystem$(WIND_CC_SYSROOT)/usr/h/public -D_VSB_PUBLIC_HDR_DIR=$(WIND_CC_SYSROOT)/usr/h/public -I$(WIND_CC_SYSROOT)/usr/3pp/develop/usr/include $(OPT_CC_V) $*
[DKM] Compile = $(CC) --target=arm64 -ffixed-x18 -DCPU=_VX_ARMARCH8A $(MC_MODEL) -fno-strict-aliasing -fno-builtin -nostdlibinc -nostdinc++ -D__ELF__ -mno-implicit-float -D__vxworks -D__VXWORKS__   -D_WRS_KERNEL -DTOOL_FAMILY=llvm -DTOOL=llvm -D_USE_INIT_ARRAY -D_VSB_CONFIG_FILE=\"$(WIND_CC_SYSROOT)/h/config/vsbConfig.h\" -I. -I$(WIND_CC_SYSROOT)/share/h -isystem$(WIND_CC_SYSROOT)/krnl/h/system -isystem$(WIND_CC_SYSROOT)/krnl/h/public -D_VSB_PUBLIC_HDR_DIR=$(WIND_CC_SYSROOT)/krnl/h/public $(OPT_CC_V) $*

[C++] LibCplusPlus = -lcplusplus
[C++] LibToolCplus = -lllvmcplus
[DKM & !C++] DkmCtdt = $(WIND_CC_SYSROOT)/krnl/llvm/ctdtc.o
[DKM & C++]  DkmCtdt  = $(WIND_CC_SYSROOT)/krnl/llvm/ctdtcplus.o

[Dynamic] LibDl = -ldl

[Shared | Dynamic]  LD_MODE = --as-needed
[-rdynamic]         LD_MODE += -export-dynamic
[DKM & Partial & !-r]         LD_MODE = -r

[Verbose] OPT_LD_V = -v

[--static-crt] OPT_STATIC_CRT = -Bstatic

[Static | Dynamic] Link = $(LD) $(LD_MODE) --defsym __wrs_rtp_base=0x80000000 -u __wr_need_frame_add -u __tls__ -T$(WIND_CC_SYSROOT)/usr/ldscripts/rtp.ld $(WIND_CC_SYSROOT)/usr/lib/common/crt0.o $* -L$(WIND_CC_SYSROOT)/usr/lib/common/ -L$(WIND_CC_SYSROOT)/usr/3pp/develop/lib -L$(WIND_CC_SYSROOT)/usr/3pp/develop/usr/lib $(OPT_STATIC_CRT) --start-group -lc -lc_internal -lllvm  -lunix -lregex $(LibDl) $(LibCplusPlus) $(LibToolCplus) --end-group

[Shared] Link = $(LD) $(LD_MODE) $* --exclude-libs libc_internal_s.a -u __init -u __fini -u __wr_need_frame_add -L$(WIND_CC_SYSROOT)/usr/lib/common -L$(WIND_CC_SYSROOT)/usr/3pp/develop/lib -L$(WIND_CC_SYSROOT)/usr/3pp/develop/usr/lib -lc -lc_internal_s  -lllvm  -lunix -lregex -T$(WIND_CC_SYSROOT)/usr/ldscripts/rtp.ld

[Partial & RTP] Link = $(LD) $(LD_MODE) $*
[Partial & DKM] Link = $(PROG_ld_DKM) -X $(LD_MODE) --eh-frame-hdr --force-group-allocation  -T$(WIND_CC_SYSROOT)/krnl/ldscripts/dkm.ld $(DkmCtdt) $*

