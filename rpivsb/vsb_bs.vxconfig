# Automatically generated file: do not edit


menu "global configuration options for BSP rpi_4"

config BSP_rpi_4_0_1_0_1
   bool 
   default y

config BSP_rpi_4
   bool 
   default y


config BSP_BASED
   bool 
   default y


# This is a hidden VSB option that specifies the version number of the VSB.
# In 6.9.3 this version was created and set to 1.
# All VSBs prior to 6.9.3 did not have a version number.
# This number is expected to change if there is any restructuring of the VSB.
config VSB_VERSION
   int
   default 1

config DOMAINS_SUPPORTED
   bool
   default y


config DOMAIN_VXWORKS
   bool
   default y


config DEF_PRIMARY_ONLY
   bool
   default y


config DEFAULT_IPV6
   bool
   default y


config DEFAULT_SMP_Y
   bool
   depends on SUPPORTS_SMP
   default y


config DEFAULT_LP64_Y
   bool
   depends on SUPPORTS_LP64
   default y


config REQUIRES_VX7_COMPATIBLE
      bool
      default y


config SUPPORTS_LP64
   bool
   default y

config LP64_ONLY
   bool
   default y

config SUPPORTS_SMP
   bool
   default y

config  LP64
   bool
   prompt "Enable building LP64 libraries for VxWorks 64-bit" if !LP64_ONLY
   depends on (SUPPORTS_LP64 && !DEFAULT_SIT_NB) || DEFAULT_LP64_Y || LP64_ONLY
   default y if DEFAULT_LP64_Y || LP64_ONLY
   help
   This option enables the 64-bit mode support (LP64 data model) in VxWorks. When this option is not selected the 32-bit mode (ILP32 data model) is supported.

comment "LP64 enabled for this VSB"
   depends on LP64_ONLY

config VSB_DATAMODEL
   string
   default "ILP32" if ILP32
   default "LP64" if LP64
   default "UNSET" if !LP64 && !ILP32


comment "Error Configuration does not support either ILP32 or LP64!"
   depends on  !LP64 && !ILP32

comment "rpi_4_0_1_0_1_CPU = ARMARCH8A"

config BSP_ARMARCH8A
   bool 
   default y

config CPU_ARMARCH8A
   bool
   default y
   depends on BSP_ARMARCH8A

config CPU
   string
   default "ARMARCH8A" if CPU_ARMARCH8A



choice
      prompt "Select the Floating Point configuration" 
      depends on CPU_ARMARCH8A
      default FP_ARMARCH8A_hard_32 if !LP64
      default FP_ARMARCH8A_hard_64 if LP64
      help 
          The Floating Point Option (FP) needs to be selected for the library.

config FP_ARMARCH8A_hard_32
      bool "hard"
      depends on !LP64

config FP_ARMARCH8A_hard_64
      bool "hard"
      depends on LP64

endchoice


config FP_hard
      bool
      default y
      depends on (FP_ARMARCH8A_hard_32 || FP_ARMARCH8A_hard_64)


config FP
      string
      default "hard" if FP_hard

config rpi_4_0_1_0_1_FP
      string
      depends on CPU_ARMARCH8A
      default "hard" if (FP_ARMARCH8A_hard_32 || FP_ARMARCH8A_hard_64)


choice
    depends on CPU_ARMARCH8A
      prompt "Select the ENDIAN configuration" 
      default ENDIAN_ARMARCH8A_little_32 if !LP64
      default ENDIAN_ARMARCH8A_little_64 if LP64
      help 
          The ENDIAN Option needs to be selected for the library.

config ENDIAN_ARMARCH8A_little_32
      bool "little"
      depends on !LP64

config ENDIAN_ARMARCH8A_little_64
      bool "little"
      depends on LP64

endchoice


config ENDIAN_little
      bool
      default y
      depends on (ENDIAN_ARMARCH8A_little_32 ||ENDIAN_ARMARCH8A_little_64)


config ENDIAN
      string
      default "little" if ENDIAN_little

config rpi_4_0_1_0_1_ENDIAN
      string
      depends on CPU_ARMARCH8A
      default "little" if (ENDIAN_ARMARCH8A_little_32 || ENDIAN_ARMARCH8A_little_64)


config llvm_CCBASE_PATH
  string
  default "$(WIND_HOME)/compilers/llvm-9.0.1.1"
  depends on llvm_9_0_1_1


config llvm_WIN_CCPATH
  string
  default "$(WIND_HOME)/compilers/llvm-9.0.1.1/WIN64/bin"
  depends on llvm_9_0_1_1


config llvm_LINUX_CCPATH
  string
  default "$(WIND_HOME)/compilers/llvm-9.0.1.1/LINUX64/bin"
  depends on llvm_9_0_1_1


config llvm_CCTDN
  string
  default "llvm_2016_04"
  depends on llvm_9_0_1_1


config llvm_CCTT
  string
  default "llvm"
  depends on llvm_9_0_1_1


config llvm_CCVER
  string
  default "llvm_9_0_1_1"
  depends on llvm_9_0_1_1


config llvm_CCRTC
  string
  default "llvm_9_0_1_1"
  depends on llvm_9_0_1_1


config llvm_9_0_1_1_CCBASE_PATH
  string
  default "$(WIND_HOME)/compilers/llvm-9.0.1.1"
  depends on llvm_9_0_1_1


config llvm_9_0_1_1_WIN_CCPATH
  string
  default "$(WIND_HOME)/compilers/llvm-9.0.1.1/WIN64/bin"
  depends on llvm_9_0_1_1


config llvm_9_0_1_1_LINUX_CCPATH
  string
  default "$(WIND_HOME)/compilers/llvm-9.0.1.1/LINUX64/bin"
  depends on llvm_9_0_1_1


config llvm_9_0_1_1_CCTDN
  string
  default "llvm_2016_04"
  depends on llvm_9_0_1_1


config llvm_9_0_1_1_CCTT
  string
  default "llvm"
  depends on llvm_9_0_1_1


config llvm_9_0_1_1_CCVER
  string
  default "llvm_9_0_1_1"
  depends on llvm_9_0_1_1


config llvm_9_0_1_1_CCRTC
  string
  default "llvm_9_0_1_1"
  depends on llvm_9_0_1_1


config gnu_CCBASE_PATH
  string
  default "$(WIND_HOME)/compilers/gnu-8.3.0.1"
  depends on gnu_8_3_0_1


config gnu_WIN_CCPATH
  string
  default "$(WIND_HOME)/compilers/gnu-8.3.0.1/x86_64-win32/bin"
  depends on gnu_8_3_0_1


config gnu_LINUX_CCPATH
  string
  default "$(WIND_HOME)/compilers/gnu-8.3.0.1/x86_64-linux2/bin"
  depends on gnu_8_3_0_1


config gnu_CCTDN
  string
  default "gnu_2018_06"
  depends on gnu_8_3_0_1


config gnu_CCTT
  string
  default "gnu"
  depends on gnu_8_3_0_1


config gnu_CCVER
  string
  default "gnu_8_3_0_1"
  depends on gnu_8_3_0_1


config gnu_CCRTC
  string
  default "gnu_8_3_0_1"
  depends on gnu_8_3_0_1


config gnu_8_3_0_1_CCBASE_PATH
  string
  default "$(WIND_HOME)/compilers/gnu-8.3.0.1"
  depends on gnu_8_3_0_1


config gnu_8_3_0_1_WIN_CCPATH
  string
  default "$(WIND_HOME)/compilers/gnu-8.3.0.1/x86_64-win32/bin"
  depends on gnu_8_3_0_1


config gnu_8_3_0_1_LINUX_CCPATH
  string
  default "$(WIND_HOME)/compilers/gnu-8.3.0.1/x86_64-linux2/bin"
  depends on gnu_8_3_0_1


config gnu_8_3_0_1_CCTDN
  string
  default "gnu_2018_06"
  depends on gnu_8_3_0_1


config gnu_8_3_0_1_CCTT
  string
  default "gnu"
  depends on gnu_8_3_0_1


config gnu_8_3_0_1_CCVER
  string
  default "gnu_8_3_0_1"
  depends on gnu_8_3_0_1


config gnu_8_3_0_1_CCRTC
  string
  default "gnu_8_3_0_1"
  depends on gnu_8_3_0_1


config rust_CCBASE_PATH
  string
  default "$(WIND_HOME)/compilers/rust-1.39.0.0"
  depends on rust_1_39_0_0


config rust_WIN_CCPATH
  string
  default "$(WIND_HOME)/compilers/rust-1.39.0.0/x86_64-pc-windows-gnu/bin"
  depends on rust_1_39_0_0


config rust_LINUX_CCPATH
  string
  default "$(WIND_HOME)/compilers/rust-1.39.0.0/x86_64-unknown-linux-gnu/bin"
  depends on rust_1_39_0_0


config rust_CCTDN
  string
  default ""
  depends on rust_1_39_0_0


config rust_CCTT
  string
  default "rust"
  depends on rust_1_39_0_0


config rust_CCVER
  string
  default "rust_1_39_0_0"
  depends on rust_1_39_0_0


config rust_CCRTC
  string
  default "rust_1_39_0_0"
  depends on rust_1_39_0_0


config rust_1_39_0_0_CCBASE_PATH
  string
  default "$(WIND_HOME)/compilers/rust-1.39.0.0"
  depends on rust_1_39_0_0


config rust_1_39_0_0_WIN_CCPATH
  string
  default "$(WIND_HOME)/compilers/rust-1.39.0.0/x86_64-pc-windows-gnu/bin"
  depends on rust_1_39_0_0


config rust_1_39_0_0_LINUX_CCPATH
  string
  default "$(WIND_HOME)/compilers/rust-1.39.0.0/x86_64-unknown-linux-gnu/bin"
  depends on rust_1_39_0_0


config rust_1_39_0_0_CCTDN
  string
  default ""
  depends on rust_1_39_0_0


config rust_1_39_0_0_CCTT
  string
  default "rust"
  depends on rust_1_39_0_0


config rust_1_39_0_0_CCVER
  string
  default "rust_1_39_0_0"
  depends on rust_1_39_0_0


config rust_1_39_0_0_CCRTC
  string
  default "rust_1_39_0_0"
  depends on rust_1_39_0_0


config ARCH_arm
      default y
      bool


choice ch_pri_tool_ILP32_ARMARCH8A
   prompt "Select toolchain" 
   depends on ILP32 && CPU_ARMARCH8A
   default PRI_TOOL_llvm 
  help 
   The Primary Tool is used to compile the core source.

config PRI_TOOL_ARMARCH8A_ILP32_llvm
   bool "llvm"

endchoice


choice ch_pri_tool_llvm_ver_ILP32_ARMARCH8A
   prompt "Select the llvm version" 
   depends on PRI_TOOL_ARMARCH8A_ILP32_llvm
   default PRI_TOOL_ARMARCH8A_ILP32_llvm_9_0_1_1


config PRI_TOOL_ARMARCH8A_ILP32_llvm_9_0_1_1
   bool "llvm_9_0_1_1"

endchoice


config PRI_TOOL_ILP32_llvm_9_0_1_1
   bool
   default y
   depends on PRI_TOOL_ARMARCH8A_ILP32_llvm_9_0_1_1


choice ch_pri_tool_LP64_ARMARCH8A
   prompt "Select toolchain" 
   depends on LP64 && CPU_ARMARCH8A
   default PRI_TOOL_llvm 
  help 
   The Primary Tool is used to compile the core source.

config PRI_TOOL_ARMARCH8A_LP64_llvm
   bool "llvm"

endchoice


choice ch_pri_tool_llvm_ver_LP64_ARMARCH8A
   prompt "Select the llvm version" 
   depends on PRI_TOOL_ARMARCH8A_LP64_llvm
   default PRI_TOOL_ARMARCH8A_LP64_llvm_9_0_1_1


config PRI_TOOL_ARMARCH8A_LP64_llvm_9_0_1_1
   bool "llvm_9_0_1_1"

endchoice


config PRI_TOOL_LP64_llvm_9_0_1_1
   bool
   default y
   depends on PRI_TOOL_ARMARCH8A_LP64_llvm_9_0_1_1


#set the features for the primary compiler


config COMPILER_ARM
   bool
   default y if PRI_TOOL_ARMARCH8A_ILP32_llvm_9_0_1_1
   default y if PRI_TOOL_ARMARCH8A_LP64_llvm_9_0_1_1

config COMPILER_TLS_STD
   bool
   default y if PRI_TOOL_ARMARCH8A_ILP32_llvm_9_0_1_1
   default y if PRI_TOOL_ARMARCH8A_LP64_llvm_9_0_1_1

config COMPILER_ARM64
   bool
   default y if PRI_TOOL_ARMARCH8A_ILP32_llvm_9_0_1_1
   default y if PRI_TOOL_ARMARCH8A_LP64_llvm_9_0_1_1

config COMPILER_IA
   bool
   default y if PRI_TOOL_ARMARCH8A_ILP32_llvm_9_0_1_1
   default y if PRI_TOOL_ARMARCH8A_LP64_llvm_9_0_1_1

config COMPILER_CPP2014
   bool
   default y if PRI_TOOL_ARMARCH8A_ILP32_llvm_9_0_1_1
   default y if PRI_TOOL_ARMARCH8A_LP64_llvm_9_0_1_1

config COMPILER_RISCV
   bool
   default y if PRI_TOOL_ARMARCH8A_ILP32_llvm_9_0_1_1
   default y if PRI_TOOL_ARMARCH8A_LP64_llvm_9_0_1_1

config COMPILER_CPP2011
   bool
   default y if PRI_TOOL_ARMARCH8A_ILP32_llvm_9_0_1_1
   default y if PRI_TOOL_ARMARCH8A_LP64_llvm_9_0_1_1


config PRI_llvm
   bool
   default y if PRI_TOOL_ARMARCH8A_ILP32_llvm_9_0_1_1
   default y if PRI_TOOL_ARMARCH8A_LP64_llvm_9_0_1_1




config CAPP_TOOL_ARMARCH8A_ILP32_rust
   bool "Enable rust compiler"
   depends on ILP32 && CPU_ARMARCH8A
   default y



choice ch_capp_tool_rust_ver_ILP32_ARMARCH8A
   depends on CAPP_TOOL_ARMARCH8A_ILP32_rust
   prompt "Select the rust compiler version" 
  help
    This is the version of rust that can be used to compile rust files
   default CAPP_TOOL_ARMARCH8A_ILP32_rust_1_39_0_0


config CAPP_TOOL_ARMARCH8A_ILP32_rust_1_39_0_0
   bool "rust_1_39_0_0"

endchoice


config CAPP_TOOL_ILP32_rust_1_39_0_0
   bool
   default y
   depends on CAPP_TOOL_ARMARCH8A_ILP32_rust_1_39_0_0



config CAPP_TOOL_ARMARCH8A_LP64_rust
   bool "Enable rust compiler"
   depends on LP64 && CPU_ARMARCH8A
   default y



choice ch_capp_tool_rust_ver_LP64_ARMARCH8A
   depends on CAPP_TOOL_ARMARCH8A_LP64_rust
   prompt "Select the rust compiler version" 
  help
    This is the version of rust that can be used to compile rust files
   default CAPP_TOOL_ARMARCH8A_LP64_rust_1_39_0_0


config CAPP_TOOL_ARMARCH8A_LP64_rust_1_39_0_0
   bool "rust_1_39_0_0"

endchoice


config CAPP_TOOL_LP64_rust_1_39_0_0
   bool
   default y
   depends on CAPP_TOOL_ARMARCH8A_LP64_rust_1_39_0_0


# set the features for the listed compiler


config COMPILER_RUST
   bool
   default y if CAPP_TOOL_ARMARCH8A_ILP32_rust_1_39_0_0
   default y if CAPP_TOOL_ARMARCH8A_LP64_rust_1_39_0_0


config CAPP_rust
   bool
   default y if CAPP_TOOL_ARMARCH8A_ILP32_rust_1_39_0_0
   default y if CAPP_TOOL_ARMARCH8A_LP64_rust_1_39_0_0



config llvm_SUPPORTED
   bool
   default y if (PRI_TOOL_ARMARCH8A_ILP32_llvm ) &&  ILP32
   default y if (PRI_TOOL_ARMARCH8A_LP64_llvm ) &&  LP64

config APP_PRI_ARMARCH8A
   bool
   default y
   depends on CPU_ARMARCH8A


config rpi_4_0_1_0_1_APP_TOOL
   string
   depends on CPU_ARMARCH8A
   default "gnu" if (T_gnu_8_3_0_1 && APP_PRI_ARMARCH8A)
   default "llvm" if (T_llvm_9_0_1_1 && APP_PRI_ARMARCH8A)

config rpi_4_0_1_0_1_APP_TOOL_VERSION
   string
   depends on CPU_ARMARCH8A
   default "gnu_8_3_0_1" if (T_gnu_8_3_0_1 && APP_PRI_ARMARCH8A)
   default "llvm_9_0_1_1" if (T_llvm_9_0_1_1 && APP_PRI_ARMARCH8A)

config T_gnu_8_3_0_1
   bool
   default y if PRI_TOOL_ILP32_gnu_8_3_0_1
   default y if PRI_TOOL_LP64_gnu_8_3_0_1

config T_llvm_9_0_1_1
   bool
   default y if PRI_TOOL_ILP32_llvm_9_0_1_1
   default y if PRI_TOOL_LP64_llvm_9_0_1_1

config AT_rust_1_39_0_0
   bool
   default y if CAPP_TOOL_ILP32_rust_1_39_0_0
   default y if CAPP_TOOL_LP64_rust_1_39_0_0

config gnu_8_3_0_1
   bool
   default y if T_gnu_8_3_0_1

config llvm_9_0_1_1
   bool
   default y if T_llvm_9_0_1_1

config rust_1_39_0_0
   bool
   default y if AT_rust_1_39_0_0

config rpi_4_0_1_0_1_TOOL
   string
   default "gnu" if T_gnu_8_3_0_1
   default "llvm" if T_llvm_9_0_1_1

config rpi_4_0_1_0_1_TOOL_VERSION
   string
   default "gnu_8_3_0_1" if T_gnu_8_3_0_1
   default "llvm_9_0_1_1" if T_llvm_9_0_1_1

config rpi_4_0_1_0_1_TOOL_TDN
   string
   default "gnu_2018_06" if T_gnu_8_3_0_1
   default "llvm_2016_04" if T_llvm_9_0_1_1


config SEC_TOOL_DISABLED
   bool
   default y


config ALL_TOOLS
   string
   default "gnu_8_3_0_1"   if T_gnu_8_3_0_1
   default "llvm_9_0_1_1"   if T_llvm_9_0_1_1

config ALL_APP_TOOLS
   string
   default "gnu"   if T_gnu_8_3_0_1
   default "llvm"   if T_llvm_9_0_1_1

config gnu_VERSION
   string
   default "gnu_8_3_0_1" if T_gnu_8_3_0_1

config llvm_VERSION
   string
   default "llvm_9_0_1_1" if T_llvm_9_0_1_1

config rust_VERSION
   string
   default "rust_1_39_0_0" if AT_rust_1_39_0_0

config  ADDEDCFLAGS
    string "Optional kernel libraries compiler flags [?]"
    default ""
    help 
          These optional flags will be passed to the compiler when building the source code for the kernel libraries in the VSB.


config  ADDEDUSERCFLAGS
    string "Optional RTP shared libraries and static libraries compiler flags [?]"
    default ""
    help 
          These optional flags will be passed to the compiler when building the source code for the RTP shared libraries and static libraries in the VSB.


config  ADDEDCFLAGS_APP
    string "Optional RTP applications compiler flags [?]"
    default ""
    help 
          These optional flags will be passed to the compiler when building the source code for the RTP applications in the VSB.

